{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Documents\\\\GitHub\\\\User-Onboarding\\\\user-onboarding\\\\src\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as Yup from 'yup';\nconst formSchema = Yup.object().shape({\n  email: Yup.string().email(\"Must be a valid email address.\").required(\"Must include email address.\"),\n  password: Yup.string().min(6, \"Passwords must be at least 6 characters long.\").required(\"Password is Required\"),\n  terms: Yup.boolean().oneOf([true], \"You must accept Terms and Conditions\")\n});\nconst [errors, setErrors] = useState({\n  email: \"\",\n  password: \"\",\n  terms: \"\"\n});\n\nconst Form = props => {\n  // const {inputForms, setInputForms} = props;\n  const [inputForm, setInputForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    terms: false\n  });\n\n  const handleChange = event => {\n    setInputForm({ ...inputForm,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // setInputForms([...inputForms, { ...inputForm, id: Date.now() }]);\n\n    setInputForm([{\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      terms: false\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: inputForm.name,\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }\n  }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: inputForm.email,\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }\n  }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: inputForm.password,\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }\n  }, \"Click here if you agree to the T.O.S:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"terms\",\n    value: inputForm.terms,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }\n  }, \"Submit\"));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Brian/Documents/GitHub/User-Onboarding/user-onboarding/src/Form.js"],"names":["React","useState","useEffect","Yup","formSchema","object","shape","email","string","required","password","min","terms","boolean","oneOf","errors","setErrors","Form","props","inputForm","setInputForm","name","handleChange","event","target","value","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nconst formSchema = Yup.object().shape({\r\n    email: Yup\r\n      .string()\r\n      .email(\"Must be a valid email address.\")\r\n      .required(\"Must include email address.\"),\r\n    password: Yup\r\n      .string()\r\n      .min(6, \"Passwords must be at least 6 characters long.\")\r\n      .required(\"Password is Required\"),\r\n    terms: Yup\r\n      .boolean()\r\n      .oneOf([true], \"You must accept Terms and Conditions\")\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    terms: \"\"\r\n  });\r\n\r\n  \r\n\r\n\r\n\r\nconst Form = (props) => {\r\n\r\n    \r\n    // const {inputForms, setInputForms} = props;\r\n\r\n\r\n    const [inputForm, setInputForm] = useState({name: \"\", email: \"\", password: \"\", terms: false})\r\n    \r\n    const handleChange = event => {\r\n\r\n        setInputForm({...inputForm, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n\r\n        event.preventDefault();\r\n        // setInputForms([...inputForms, { ...inputForm, id: Date.now() }]);\r\n        setInputForm([{name: \"\", email: \"\", password: \"\", terms: false}]);\r\n\r\n    } \r\n\r\nreturn (\r\n\r\n<form onSubmit={handleSubmit}>\r\n\r\n<label> \r\n    Name\r\n    <input type=\"text\" name=\"name\" value={inputForm.name} onChange={event => handleChange(event)} />\r\n</label>\r\n\r\n<label> \r\n    Email\r\n    <input type=\"email\" name=\"email\" value={inputForm.email} onChange={event => handleChange(event)} />\r\n</label>\r\n\r\n<label> \r\n    Password\r\n    <input type=\"password\" name=\"password\" value={inputForm.password} onChange={event => handleChange(event)} />\r\n</label>\r\n\r\n<label> \r\n    Click here if you agree to the T.O.S:\r\n    <input type=\"checkbox\" name=\"terms\"  value={inputForm.terms} onChange={handleChange} />\r\n</label>\r\n\r\n<button>Submit</button>\r\n\r\n</form>\r\n\r\n\r\n)\r\n\r\n\r\n\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}