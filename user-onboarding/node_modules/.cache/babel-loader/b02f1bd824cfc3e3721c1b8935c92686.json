{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Documents\\\\GitHub\\\\User-Onboarding\\\\user-onboarding\\\\src\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as Yup from 'yup';\n\nconst Form = props => {\n  // const {inputForms, setInputForms} = props;\n  const [inputForm, setInputForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    terms: false\n  });\n\n  const handleChange = event => {\n    setInputForm({ ...inputForm,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // setInputForms([...inputForms, { ...inputForm, id: Date.now() }]);\n\n    setInputForm([{\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      terms: false\n    }]);\n  };\n\n  const formSchema = Yup.object().shape({\n    email: Yup.string().email(\"Must be a valid email address.\").required(\"Must include email address.\"),\n    password: Yup.string().min(6, \"Passwords must be at least 6 characters long.\").required(\"Password is Required\"),\n    terms: Yup.boolean().oneOf([true], \"You must accept Terms and Conditions\")\n  });\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\",\n    terms: \"\"\n  });\n\n  const inputChange = event => {\n    event.persist();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    name: \"name\",\n    value: inputForm.name,\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }\n  }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    value: inputForm.email,\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"passwoerd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 1\n    }\n  }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    value: inputForm.password,\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"terms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 1\n    }\n  }, \"Click here if you agree to the T.O.S:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"terms\",\n    type: \"checkbox\",\n    name: \"terms\",\n    value: inputForm.terms,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }\n  }, \"Submit\"));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Brian/Documents/GitHub/User-Onboarding/user-onboarding/src/Form.js"],"names":["React","useState","useEffect","Yup","Form","props","inputForm","setInputForm","name","email","password","terms","handleChange","event","target","value","handleSubmit","preventDefault","formSchema","object","shape","string","required","min","boolean","oneOf","errors","setErrors","inputChange","persist"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n  \r\n\r\n\r\nconst Form = (props) => {\r\n\r\n    \r\n    // const {inputForms, setInputForms} = props;\r\n\r\n\r\n    const [inputForm, setInputForm] = useState({name: \"\", email: \"\", password: \"\", terms: false})\r\n    \r\n    const handleChange = event => {\r\n\r\n        setInputForm({...inputForm, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n\r\n        event.preventDefault();\r\n        // setInputForms([...inputForms, { ...inputForm, id: Date.now() }]);\r\n        setInputForm([{name: \"\", email: \"\", password: \"\", terms: false}]);\r\n\r\n    } \r\n\r\n\r\n\r\n    const formSchema = Yup.object().shape({\r\n        email: Yup\r\n          .string()\r\n          .email(\"Must be a valid email address.\")\r\n          .required(\"Must include email address.\"),\r\n        password: Yup\r\n          .string()\r\n          .min(6, \"Passwords must be at least 6 characters long.\")\r\n          .required(\"Password is Required\"),\r\n        terms: Yup\r\n          .boolean()\r\n          .oneOf([true], \"You must accept Terms and Conditions\")\r\n      });\r\n    \r\n      const [errors, setErrors] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        terms: \"\"\r\n      });\r\n\r\n      \r\n\r\n\r\n      const inputChange = event => {\r\n       \r\n        event.persist();\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<form onSubmit={handleSubmit}>\r\n\r\n<label htmlFor=\"name\"> \r\n    Name\r\n    <input id=\"name\" type=\"text\" name=\"name\" value={inputForm.name} onChange={event => handleChange(event)} />\r\n</label>\r\n\r\n<label htmlFor=\"email\"> \r\n    Email\r\n    <input id=\"email\" type=\"email\" name=\"email\" value={inputForm.email} onChange={event => handleChange(event)} />\r\n</label>\r\n\r\n<label htmlFor=\"passwoerd\"> \r\n    Password\r\n    <input id=\"password\" type=\"password\" name=\"password\" value={inputForm.password} onChange={event => handleChange(event)} />\r\n</label>\r\n\r\n<label htmlFor=\"terms\"> \r\n    Click here if you agree to the T.O.S:\r\n    <input id=\"terms\" type=\"checkbox\" name=\"terms\"  value={inputForm.terms} onChange={handleChange} />\r\n</label>\r\n\r\n<button>Submit</button>\r\n\r\n</form>\r\n\r\n\r\n)\r\n\r\n\r\n\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}